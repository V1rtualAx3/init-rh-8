---
- name: Create admin group
  ansible.builtin.group:
    name: "{{ groupName }}"
    state: present
    gid: 1005

- name: Create admin user
  ansible.builtin.user:
    name: "{{ userName }}"
    password: "{{ userPassword|password_hash('sha512') }}"
    uid: 1005
    group: "{{ groupName }}"
    
    shell: "/bin/bash"
    generate_ssh_key: yes
    ssh_key_type: ed25519
    ssh_key_bits: 4096
    ssh_key_passphrase: "{{ userPassphrase }}"
    ssh_key_file: .ssh/id_ed25519
  failed_when: (userPassword|length == 0) or (userPassphrase|length == 0)

- name: Add admin group to sudoers
  lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: "^%{{ groupName }}"
    line: "%{{ groupName }} ALL=(ALL)       ALL"
    validate: 'visudo -cf %s'

- name: Read ssh key
  shell: cat "/home/{{ userName }}/.ssh/id_ed25519.pub"
  register: userSshKey

- name: Add ssh key to authorized_keys
  ansible.posix.authorized_key:
    user: "{{ userName }}"
    state: present
    key: "{{ userSshKey.stdout }}"

- name: "Check if ssh server is installed"
  ansible.builtin.package_facts:
    manager: auto

- name: Creation of new sshd_conf file
  ansible.builtin.template:
    src: sshd_conf.yaml.j2
    dest: /etc/ssh/sshd_config
    owner: root
    group: root
    mode: '0600'
    validate: /usr/sbin/sshd -t -f %s
    backup: yes
  when: '"openssh-server" in ansible_facts.packages'

- name: Retrive user private key
  shell: cat "/home/{{ userName }}/.ssh/id_ed25519"
  register: userPrivateKey

- name: Display user private key
  debug:
    msg:
      - ''
      - "{{ userPrivateKey.stdout }}"
      - ''
      - "How Convert plaintext to key, create a file"
      - "And use this command : echo -e $(cat myfile)"
      - ''

- name: Pause before continue execution
  ansible.builtin.pause:
    minutes: 1
    prompt: Please retrive your key, it will be impossible afterwards
  